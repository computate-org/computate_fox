---
- name: "Install dependencies as root: {{ APP_DEPENDENCIES | join(' ') }}"
  package:
    name: "{{ APP_DEPENDENCIES }}"
  become: true
  register: INSTALL_DEPENDENCIES
  ignore_errors: true
- name: "Install dependencies as user {{ APP_USER }}: {{ APP_DEPENDENCIES | join(' ') }}"
  shell: "pkcon install -y {{ item }} | true"
  loop: "{{ APP_DEPENDENCIES }}"
  when: INSTALL_DEPENDENCIES.failed
- name: Create the directory {{ APP_SRC }}
  file:
    name: "{{ APP_SRC }}"
    state: directory
  become: "{{ APP_ROOT }}"
- name: Check for the {{ APP_NAME }} README file
  stat:
    path: "{{ APP_SRC }}/README"
  register: APP_README_PATH
- name: "Download the code: {{ APP_DOWNLOAD_URL }}"
  get_url:
    url: "{{ APP_DOWNLOAD_URL }}"
    dest: "{{ APP_DOWNLOAD_DEST }}"
  when: not APP_README_PATH.stat.exists
- name: Unarchive the {{ APP_NAME }} source code into {{ APP_SRC }}
  unarchive:
    src: "{{ APP_DOWNLOAD_DEST }}"
    dest: "{{ APP_SRC }}"
    remote_src: true
    extra_opts: [--strip-components=1]
- name: Run ./configure --prefix {{ APP_PREFIX }}
  shell: ./configure --prefix {{ APP_PREFIX }}
  args:
    chdir: "{{ APP_SRC }}"
- name: Run make -j $(nproc)
  shell: make -j $(nproc)
  args:
    chdir: "{{ APP_SRC }}"
- name: Run make install -j $(nproc)
  shell: make install -j $(nproc)
  args:
    chdir: "{{ APP_SRC }}"
  become: "{{ APP_ROOT }}"

